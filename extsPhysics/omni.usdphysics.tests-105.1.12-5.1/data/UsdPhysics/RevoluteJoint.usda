#usda 1.0
def Xform "World"
{

    def Cube "box0" (
        prepend apiSchemas = ["PhysicsCollisionAPI"]
    )
    {
        color3f[] primvars:displayColor = [(0.64705884, 0.08235294, 0.08235294)]
        double size = 100
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.1, 1, 0.1)
        double3 xformOp:translate = (0, 0, 1000)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Cube "box1" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsRigidBodyAPI"]
    )
    {
        color3f[] primvars:displayColor = [(0.2784314, 0.64705884, 1)]
        double size = 100
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.1, 1, 0.1)
        double3 xformOp:translate = (0, 120, 1000)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def PhysicsRevoluteJoint "revoluteJoint" (
        prepend apiSchemas = ["PhysicsDriveAPI:angular"]
    )
    {
        float breakTorque = 1e20
        float drive:angular:physics:damping = 10000000000
        float drive:angular:physics:maxForce = 1e20
        float drive:angular:physics:stiffness = 0
        float drive:angular:physics:targetPosition = 0
        float drive:angular:physics:targetVelocity = -1
        uniform token drive:angular:physics:type = "force"
        custom token physics:axis = "X"
        rel physics:body0 = </World/box0>
        rel physics:body1 = </World/box1>
        float physics:breakForce = 1e20
        float physics:breakTorque = inf
        bool physics:jointEnabled = 1
        point3f physics:localPos0 = (0, 60, 0)
        point3f physics:localPos1 = (0, -60, 0)
        quatf physics:localRot0 = (1, 0, 0, 0)
        quatf physics:localRot1 = (1, 0, 0, 0)
        custom float physics:lowerLimit = -90.0
        custom float physics:upperLimit = 90.0
        bool physxJoint:enableCollision = 0
        bool physxJoint:enableProjection = 0
        float physxLimit:angular:bounceThreshold = 0
        float physxLimit:angular:contactDistance = 0
        float physxLimit:angular:damping = 0
        float physxLimit:angular:restitution = 0
        float physxLimit:angular:stiffness = 0
    }
}

