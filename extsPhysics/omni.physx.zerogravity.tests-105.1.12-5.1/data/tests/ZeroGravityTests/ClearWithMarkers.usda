#usda 1.0
(
    customLayerData = {
        dictionary cameraSettings = {
            dictionary Front = {
                double3 position = (0, 0, 52500)
                double radius = 500
                double3 target = (0, 0, 0)
            }
            dictionary Perspective = {
                double3 position = (260.99391959977044, 41.326809252523915, 131.51541901226472)
                double3 target = (250.00000004270808, 62.53730742046823, 6.424204457289306e-8)
            }
            dictionary Right = {
                double3 position = (-52500, 0, -1.1657341758564144e-11)
                double radius = 500
                double3 target = (0, 0, 0)
            }
            dictionary Top = {
                double3 position = (-4.420705667082193e-12, 51050.000000000015, 1.1335377081422848e-11)
                double radius = 500
                double3 target = (0, 0, 0)
            }
            string boundCamera = "/OmniverseKit_Persp"
        }
        dictionary omni_layer = {
            string authoring_layer = "./ClearWithMarkers.usda"
            dictionary muteness = {
            }
        }
    }
    defaultPrim = "World"
    endTimeCode = 100
    metersPerUnit = 0.009999999776482582
    startTimeCode = 0
    timeCodesPerSecond = 24
    upAxis = "Y"
)

def Xform "World"
{
    def DistantLight "defaultLight" (
        prepend apiSchemas = ["ShapingAPI"]
    )
    {
        float angle = 1
        float intensity = 3000
        float shaping:cone:angle = 180
        float shaping:cone:softness
        float shaping:focus
        color3f shaping:focusTint
        asset shaping:ies:file
        double3 xformOp:rotateXYZ = (-45, -0, 0)
        double3 xformOp:scale = (1, 1.0000003576278687, 1.0000003576278687)
        double3 xformOp:translate = (-1131.437172, 593.276181, -250.738688)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Mesh "Plane" (
        customData = {
            string physXPlacementModeMarkup = "triangle_mesh"
        }
    )
    {
        int[] faceVertexCounts = [4]
        int[] faceVertexIndices = [0, 2, 3, 1]
        normal3f[] normals = [(0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(-50, 0, -50), (50, 0, -50), (-50, 0, 50), (50, 0, 50)]
        float2[] primvars:st = [(1, 0), (1, 1), (0, 1), (0, 0)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
        double3 xformOp:rotateXYZ = (0, 0, 0)
        double3 xformOp:scale = (50, 1, 50)
        double3 xformOp:translate = (0, 40, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Mesh "CubeMesh" (
        customData = {
            string physXPlacementModeMarkup = "convex_hull"
        }
    )
    {
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [0, 1, 3, 2, 0, 4, 5, 1, 1, 5, 6, 3, 2, 3, 6, 7, 0, 2, 7, 4, 4, 7, 6, 5]
        normal3f[] normals = [(0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0)] (
            interpolation = "faceVarying"
        )
        vector3f physics:angularVelocity = (0, 0, 0)
        vector3f physics:velocity = (0, 0, 0)
        point3f[] points = [(-50, -50, -50), (50, -50, -50), (-50, -50, 50), (50, -50, 50), (-50, 50, -50), (50, 50, -50), (50, 50, 50), (-50, 50, 50)]
        float2[] primvars:st = [(1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
        quatf xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (0.10000000149011612, 0.10000000149011612, 0.10000000149011612)
        double3 xformOp:translate = (250, 48, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Mesh "CylinderMesh" (
        customData = {
            string physXPlacementModeMarkup = "convex_hull"
        }
    )
    {
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [0, 32, 33, 1, 1, 33, 34, 2, 2, 34, 35, 3, 3, 35, 36, 4, 4, 36, 37, 5, 5, 37, 38, 6, 6, 38, 39, 7, 7, 39, 40, 8, 8, 40, 41, 9, 9, 41, 42, 10, 10, 42, 43, 11, 11, 43, 44, 12, 12, 44, 45, 13, 13, 45, 46, 14, 14, 46, 47, 15, 15, 47, 48, 16, 16, 48, 49, 17, 17, 49, 50, 18, 18, 50, 51, 19, 19, 51, 52, 20, 20, 52, 53, 21, 21, 53, 54, 22, 22, 54, 55, 23, 23, 55, 56, 24, 24, 56, 57, 25, 25, 57, 58, 26, 26, 58, 59, 27, 27, 59, 60, 28, 28, 60, 61, 29, 29, 61, 62, 30, 30, 62, 63, 31, 31, 63, 32, 0, 64, 65, 66, 64, 66, 67, 64, 67, 68, 64, 68, 69, 64, 69, 70, 64, 70, 71, 64, 71, 72, 64, 72, 73, 64, 73, 74, 64, 74, 75, 64, 75, 76, 64, 76, 77, 64, 77, 78, 64, 78, 79, 64, 79, 80, 64, 80, 81, 64, 81, 82, 64, 82, 83, 64, 83, 84, 64, 84, 85, 64, 85, 86, 64, 86, 87, 64, 87, 88, 64, 88, 89, 64, 89, 90, 64, 90, 91, 64, 91, 92, 64, 92, 93, 64, 93, 94, 64, 94, 95, 64, 95, 96, 64, 96, 65, 97, 99, 98, 97, 100, 99, 97, 101, 100, 97, 102, 101, 97, 103, 102, 97, 104, 103, 97, 105, 104, 97, 106, 105, 97, 107, 106, 97, 108, 107, 97, 109, 108, 97, 110, 109, 97, 111, 110, 97, 112, 111, 97, 113, 112, 97, 114, 113, 97, 115, 114, 97, 116, 115, 97, 117, 116, 97, 118, 117, 97, 119, 118, 97, 120, 119, 97, 121, 120, 97, 122, 121, 97, 123, 122, 97, 124, 123, 97, 125, 124, 97, 126, 125, 97, 127, 126, 97, 128, 127, 97, 129, 128, 97, 98, 129]
        normal3f[] normals = [(50, 0, 0), (50, 0, 0), (49.039265, 0, 9.754516), (49.039265, 0, 9.754516), (49.039265, 0, 9.754516), (49.039265, 0, 9.754516), (46.193977, 0, 19.134172), (46.193977, 0, 19.134172), (46.193977, 0, 19.134172), (46.193977, 0, 19.134172), (41.573483, 0, 27.778511), (41.573483, 0, 27.778511), (41.573483, 0, 27.778511), (41.573483, 0, 27.778511), (35.35534, 0, 35.35534), (35.35534, 0, 35.35534), (35.35534, 0, 35.35534), (35.35534, 0, 35.35534), (27.778511, 0, 41.573483), (27.778511, 0, 41.573483), (27.778511, 0, 41.573483), (27.778511, 0, 41.573483), (19.134172, 0, 46.193977), (19.134172, 0, 46.193977), (19.134172, 0, 46.193977), (19.134172, 0, 46.193977), (9.754516, 0, 49.039265), (9.754516, 0, 49.039265), (9.754516, 0, 49.039265), (9.754516, 0, 49.039265), (3.0616169e-15, 0, 50), (3.0616169e-15, 0, 50), (3.0616169e-15, 0, 50), (3.0616169e-15, 0, 50), (-9.754516, 0, 49.039265), (-9.754516, 0, 49.039265), (-9.754516, 0, 49.039265), (-9.754516, 0, 49.039265), (-19.134172, 0, 46.193977), (-19.134172, 0, 46.193977), (-19.134172, 0, 46.193977), (-19.134172, 0, 46.193977), (-27.778511, 0, 41.573483), (-27.778511, 0, 41.573483), (-27.778511, 0, 41.573483), (-27.778511, 0, 41.573483), (-35.35534, 0, 35.35534), (-35.35534, 0, 35.35534), (-35.35534, 0, 35.35534), (-35.35534, 0, 35.35534), (-41.573483, 0, 27.778511), (-41.573483, 0, 27.778511), (-41.573483, 0, 27.778511), (-41.573483, 0, 27.778511), (-46.193977, 0, 19.134172), (-46.193977, 0, 19.134172), (-46.193977, 0, 19.134172), (-46.193977, 0, 19.134172), (-49.039265, 0, 9.754516), (-49.039265, 0, 9.754516), (-49.039265, 0, 9.754516), (-49.039265, 0, 9.754516), (-50, 0, 6.1232338e-15), (-50, 0, 6.1232338e-15), (-50, 0, 6.1232338e-15), (-50, 0, 6.1232338e-15), (-49.039265, 0, -9.754516), (-49.039265, 0, -9.754516), (-49.039265, 0, -9.754516), (-49.039265, 0, -9.754516), (-46.193977, 0, -19.134172), (-46.193977, 0, -19.134172), (-46.193977, 0, -19.134172), (-46.193977, 0, -19.134172), (-41.573483, 0, -27.778511), (-41.573483, 0, -27.778511), (-41.573483, 0, -27.778511), (-41.573483, 0, -27.778511), (-35.35534, 0, -35.35534), (-35.35534, 0, -35.35534), (-35.35534, 0, -35.35534), (-35.35534, 0, -35.35534), (-27.778511, 0, -41.573483), (-27.778511, 0, -41.573483), (-27.778511, 0, -41.573483), (-27.778511, 0, -41.573483), (-19.134172, 0, -46.193977), (-19.134172, 0, -46.193977), (-19.134172, 0, -46.193977), (-19.134172, 0, -46.193977), (-9.754516, 0, -49.039265), (-9.754516, 0, -49.039265), (-9.754516, 0, -49.039265), (-9.754516, 0, -49.039265), (-9.184851e-15, 0, -50), (-9.184851e-15, 0, -50), (-9.184851e-15, 0, -50), (-9.184851e-15, 0, -50), (9.754516, 0, -49.039265), (9.754516, 0, -49.039265), (9.754516, 0, -49.039265), (9.754516, 0, -49.039265), (19.134172, 0, -46.193977), (19.134172, 0, -46.193977), (19.134172, 0, -46.193977), (19.134172, 0, -46.193977), (27.778511, 0, -41.573483), (27.778511, 0, -41.573483), (27.778511, 0, -41.573483), (27.778511, 0, -41.573483), (35.35534, 0, -35.35534), (35.35534, 0, -35.35534), (35.35534, 0, -35.35534), (35.35534, 0, -35.35534), (41.573483, 0, -27.778511), (41.573483, 0, -27.778511), (41.573483, 0, -27.778511), (41.573483, 0, -27.778511), (46.193977, 0, -19.134172), (46.193977, 0, -19.134172), (46.193977, 0, -19.134172), (46.193977, 0, -19.134172), (49.039265, 0, -9.754516), (49.039265, 0, -9.754516), (49.039265, 0, -9.754516), (49.039265, 0, -9.754516), (50, 0, 0), (50, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0)] (
            interpolation = "faceVarying"
        )
        vector3f physics:angularVelocity = (0, 0, 0)
        vector3f physics:velocity = (0, 0, 0)
        point3f[] points = [(50, -50, 0), (49.039265, -50, 9.754516), (46.193977, -50, 19.134172), (41.573483, -50, 27.778511), (35.35534, -50, 35.35534), (27.778511, -50, 41.573483), (19.134172, -50, 46.193977), (9.754516, -50, 49.039265), (3.0616169e-15, -50, 50), (-9.754516, -50, 49.039265), (-19.134172, -50, 46.193977), (-27.778511, -50, 41.573483), (-35.35534, -50, 35.35534), (-41.573483, -50, 27.778511), (-46.193977, -50, 19.134172), (-49.039265, -50, 9.754516), (-50, -50, 6.1232338e-15), (-49.039265, -50, -9.754516), (-46.193977, -50, -19.134172), (-41.573483, -50, -27.778511), (-35.35534, -50, -35.35534), (-27.778511, -50, -41.573483), (-19.134172, -50, -46.193977), (-9.754516, -50, -49.039265), (-9.184851e-15, -50, -50), (9.754516, -50, -49.039265), (19.134172, -50, -46.193977), (27.778511, -50, -41.573483), (35.35534, -50, -35.35534), (41.573483, -50, -27.778511), (46.193977, -50, -19.134172), (49.039265, -50, -9.754516), (50, 50, 0), (49.039265, 50, 9.754516), (46.193977, 50, 19.134172), (41.573483, 50, 27.778511), (35.35534, 50, 35.35534), (27.778511, 50, 41.573483), (19.134172, 50, 46.193977), (9.754516, 50, 49.039265), (3.0616169e-15, 50, 50), (-9.754516, 50, 49.039265), (-19.134172, 50, 46.193977), (-27.778511, 50, 41.573483), (-35.35534, 50, 35.35534), (-41.573483, 50, 27.778511), (-46.193977, 50, 19.134172), (-49.039265, 50, 9.754516), (-50, 50, 6.1232338e-15), (-49.039265, 50, -9.754516), (-46.193977, 50, -19.134172), (-41.573483, 50, -27.778511), (-35.35534, 50, -35.35534), (-27.778511, 50, -41.573483), (-19.134172, 50, -46.193977), (-9.754516, 50, -49.039265), (-9.184851e-15, 50, -50), (9.754516, 50, -49.039265), (19.134172, 50, -46.193977), (27.778511, 50, -41.573483), (35.35534, 50, -35.35534), (41.573483, 50, -27.778511), (46.193977, 50, -19.134172), (49.039265, 50, -9.754516), (0, -50, 0), (50, -50, 0), (49.039265, -50, 9.754516), (46.193977, -50, 19.134172), (41.573483, -50, 27.778511), (35.35534, -50, 35.35534), (27.778511, -50, 41.573483), (19.134172, -50, 46.193977), (9.754516, -50, 49.039265), (3.0616169e-15, -50, 50), (-9.754516, -50, 49.039265), (-19.134172, -50, 46.193977), (-27.778511, -50, 41.573483), (-35.35534, -50, 35.35534), (-41.573483, -50, 27.778511), (-46.193977, -50, 19.134172), (-49.039265, -50, 9.754516), (-50, -50, 6.1232338e-15), (-49.039265, -50, -9.754516), (-46.193977, -50, -19.134172), (-41.573483, -50, -27.778511), (-35.35534, -50, -35.35534), (-27.778511, -50, -41.573483), (-19.134172, -50, -46.193977), (-9.754516, -50, -49.039265), (-9.184851e-15, -50, -50), (9.754516, -50, -49.039265), (19.134172, -50, -46.193977), (27.778511, -50, -41.573483), (35.35534, -50, -35.35534), (41.573483, -50, -27.778511), (46.193977, -50, -19.134172), (49.039265, -50, -9.754516), (0, 50, 0), (50, 50, 0), (49.039265, 50, 9.754516), (46.193977, 50, 19.134172), (41.573483, 50, 27.778511), (35.35534, 50, 35.35534), (27.778511, 50, 41.573483), (19.134172, 50, 46.193977), (9.754516, 50, 49.039265), (3.0616169e-15, 50, 50), (-9.754516, 50, 49.039265), (-19.134172, 50, 46.193977), (-27.778511, 50, 41.573483), (-35.35534, 50, 35.35534), (-41.573483, 50, 27.778511), (-46.193977, 50, 19.134172), (-49.039265, 50, 9.754516), (-50, 50, 6.1232338e-15), (-49.039265, 50, -9.754516), (-46.193977, 50, -19.134172), (-41.573483, 50, -27.778511), (-35.35534, 50, -35.35534), (-27.778511, 50, -41.573483), (-19.134172, 50, -46.193977), (-9.754516, 50, -49.039265), (-9.184851e-15, 50, -50), (9.754516, 50, -49.039265), (19.134172, 50, -46.193977), (27.778511, 50, -41.573483), (35.35534, 50, -35.35534), (41.573483, 50, -27.778511), (46.193977, 50, -19.134172), (49.039265, 50, -9.754516)]
        float2[] primvars:st = [(1, 0), (1, 1), (0.96875, 1), (0.96875, 0), (0.96875, 0), (0.96875, 1), (0.9375, 1), (0.9375, 0), (0.9375, 0), (0.9375, 1), (0.90625, 1), (0.90625, 0), (0.90625, 0), (0.90625, 1), (0.875, 1), (0.875, 0), (0.875, 0), (0.875, 1), (0.84375, 1), (0.84375, 0), (0.84375, 0), (0.84375, 1), (0.8125, 1), (0.8125, 0), (0.8125, 0), (0.8125, 1), (0.78125, 1), (0.78125, 0), (0.78125, 0), (0.78125, 1), (0.75, 1), (0.75, 0), (0.75, 0), (0.75, 1), (0.71875, 1), (0.71875, 0), (0.71875, 0), (0.71875, 1), (0.6875, 1), (0.6875, 0), (0.6875, 0), (0.6875, 1), (0.65625, 1), (0.65625, 0), (0.65625, 0), (0.65625, 1), (0.625, 1), (0.625, 0), (0.625, 0), (0.625, 1), (0.59375, 1), (0.59375, 0), (0.59375, 0), (0.59375, 1), (0.5625, 1), (0.5625, 0), (0.5625, 0), (0.5625, 1), (0.53125, 1), (0.53125, 0), (0.53125, 0), (0.53125, 1), (0.5, 1), (0.5, 0), (0.5, 0), (0.5, 1), (0.46875, 1), (0.46875, 0), (0.46875, 0), (0.46875, 1), (0.4375, 1), (0.4375, 0), (0.4375, 0), (0.4375, 1), (0.40625, 1), (0.40625, 0), (0.40625, 0), (0.40625, 1), (0.375, 1), (0.375, 0), (0.375, 0), (0.375, 1), (0.34375, 1), (0.34375, 0), (0.34375, 0), (0.34375, 1), (0.3125, 1), (0.3125, 0), (0.3125, 0), (0.3125, 1), (0.28125, 1), (0.28125, 0), (0.28125, 0), (0.28125, 1), (0.25, 1), (0.25, 0), (0.25, 0), (0.25, 1), (0.21875, 1), (0.21875, 0), (0.21875, 0), (0.21875, 1), (0.1875, 1), (0.1875, 0), (0.1875, 0), (0.1875, 1), (0.15625, 1), (0.15625, 0), (0.15625, 0), (0.15625, 1), (0.125, 1), (0.125, 0), (0.125, 0), (0.125, 1), (0.09375, 1), (0.09375, 0), (0.09375, 0), (0.09375, 1), (0.0625, 1), (0.0625, 0), (0.0625, 0), (0.0625, 1), (0.03125, 1), (0.03125, 0), (0.03125, 0), (0.03125, 1), (0, 1), (0, 0), (0.5, 0.5), (1, 0.5), (0.9903926, 0.59754515), (0.5, 0.5), (0.9903926, 0.59754515), (0.96193975, 0.6913417), (0.5, 0.5), (0.96193975, 0.6913417), (0.9157348, 0.7777851), (0.5, 0.5), (0.9157348, 0.7777851), (0.8535534, 0.8535534), (0.5, 0.5), (0.8535534, 0.8535534), (0.7777851, 0.9157348), (0.5, 0.5), (0.7777851, 0.9157348), (0.6913417, 0.96193975), (0.5, 0.5), (0.6913417, 0.96193975), (0.59754515, 0.9903926), (0.5, 0.5), (0.59754515, 0.9903926), (0.5, 1), (0.5, 0.5), (0.5, 1), (0.40245485, 0.9903926), (0.5, 0.5), (0.40245485, 0.9903926), (0.30865827, 0.96193975), (0.5, 0.5), (0.30865827, 0.96193975), (0.22221488, 0.9157348), (0.5, 0.5), (0.22221488, 0.9157348), (0.14644662, 0.8535534), (0.5, 0.5), (0.14644662, 0.8535534), (0.084265195, 0.7777851), (0.5, 0.5), (0.084265195, 0.7777851), (0.038060233, 0.6913417), (0.5, 0.5), (0.038060233, 0.6913417), (0.00960736, 0.59754515), (0.5, 0.5), (0.00960736, 0.59754515), (0, 0.5), (0.5, 0.5), (0, 0.5), (0.00960736, 0.40245485), (0.5, 0.5), (0.00960736, 0.40245485), (0.038060233, 0.30865827), (0.5, 0.5), (0.038060233, 0.30865827), (0.084265195, 0.22221488), (0.5, 0.5), (0.084265195, 0.22221488), (0.14644662, 0.14644662), (0.5, 0.5), (0.14644662, 0.14644662), (0.22221488, 0.084265195), (0.5, 0.5), (0.22221488, 0.084265195), (0.30865827, 0.038060233), (0.5, 0.5), (0.30865827, 0.038060233), (0.40245485, 0.00960736), (0.5, 0.5), (0.40245485, 0.00960736), (0.5, 0), (0.5, 0.5), (0.5, 0), (0.59754515, 0.00960736), (0.5, 0.5), (0.59754515, 0.00960736), (0.6913417, 0.038060233), (0.5, 0.5), (0.6913417, 0.038060233), (0.7777851, 0.084265195), (0.5, 0.5), (0.7777851, 0.084265195), (0.8535534, 0.14644662), (0.5, 0.5), (0.8535534, 0.14644662), (0.9157348, 0.22221488), (0.5, 0.5), (0.9157348, 0.22221488), (0.96193975, 0.30865827), (0.5, 0.5), (0.96193975, 0.30865827), (0.9903926, 0.40245485), (0.5, 0.5), (0.9903926, 0.40245485), (1, 0.5), (0.5, 0.5), (0.00960736, 0.59754515), (0, 0.5), (0.5, 0.5), (0.038060233, 0.6913417), (0.00960736, 0.59754515), (0.5, 0.5), (0.084265195, 0.7777851), (0.038060233, 0.6913417), (0.5, 0.5), (0.14644662, 0.8535534), (0.084265195, 0.7777851), (0.5, 0.5), (0.22221488, 0.9157348), (0.14644662, 0.8535534), (0.5, 0.5), (0.30865827, 0.96193975), (0.22221488, 0.9157348), (0.5, 0.5), (0.40245485, 0.9903926), (0.30865827, 0.96193975), (0.5, 0.5), (0.5, 1), (0.40245485, 0.9903926), (0.5, 0.5), (0.59754515, 0.9903926), (0.5, 1), (0.5, 0.5), (0.6913417, 0.96193975), (0.59754515, 0.9903926), (0.5, 0.5), (0.7777851, 0.9157348), (0.6913417, 0.96193975), (0.5, 0.5), (0.8535534, 0.8535534), (0.7777851, 0.9157348), (0.5, 0.5), (0.9157348, 0.7777851), (0.8535534, 0.8535534), (0.5, 0.5), (0.96193975, 0.6913417), (0.9157348, 0.7777851), (0.5, 0.5), (0.9903926, 0.59754515), (0.96193975, 0.6913417), (0.5, 0.5), (1, 0.5), (0.9903926, 0.59754515), (0.5, 0.5), (0.9903926, 0.40245485), (1, 0.5), (0.5, 0.5), (0.96193975, 0.30865827), (0.9903926, 0.40245485), (0.5, 0.5), (0.9157348, 0.22221488), (0.96193975, 0.30865827), (0.5, 0.5), (0.8535534, 0.14644662), (0.9157348, 0.22221488), (0.5, 0.5), (0.7777851, 0.084265195), (0.8535534, 0.14644662), (0.5, 0.5), (0.6913417, 0.038060233), (0.7777851, 0.084265195), (0.5, 0.5), (0.59754515, 0.00960736), (0.6913417, 0.038060233), (0.5, 0.5), (0.5, 0), (0.59754515, 0.00960736), (0.5, 0.5), (0.40245485, 0.00960736), (0.5, 0), (0.5, 0.5), (0.30865827, 0.038060233), (0.40245485, 0.00960736), (0.5, 0.5), (0.22221488, 0.084265195), (0.30865827, 0.038060233), (0.5, 0.5), (0.14644662, 0.14644662), (0.22221488, 0.084265195), (0.5, 0.5), (0.084265195, 0.22221488), (0.14644662, 0.14644662), (0.5, 0.5), (0.038060233, 0.30865827), (0.084265195, 0.22221488), (0.5, 0.5), (0.00960736, 0.40245485), (0.038060233, 0.30865827), (0.5, 0.5), (0, 0.5), (0.00960736, 0.40245485)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
        quatf xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (0.10000000149011612, 0.10000000149011612, 0.10000000149011612)
        double3 xformOp:translate = (250, 60, -7.105427357601002e-15)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }
}

